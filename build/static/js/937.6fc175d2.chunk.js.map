{"version":3,"file":"static/js/937.6fc175d2.chunk.js","mappings":"kOASA,MAAMA,EAAaC,EAAAA,KAAaC,MAAM,CACpCC,SAAUF,EAAAA,KACPG,IAAI,GACJC,QACC,iEACA,mIAEDC,SAAS,wBACZC,gBAAiBN,EAAAA,KACdG,IAAI,EAAG,8CACPI,MAAM,CAACP,EAAAA,GAAQ,aAAc,0BAC7BK,SAAS,kCA4Hd,QAzHA,WACE,MAAOG,IAAeC,EAAAA,EAAAA,MAChBC,GAAWC,EAAAA,EAAAA,MACjB,IAAKC,EAAWC,IAAgBC,EAAAA,EAAAA,UAG7B,CACDC,KAAM,GACNC,MAAO,KAGLC,EAAM,IAAIC,gBAAgBC,OAAOC,SAASC,QAC1CN,EAAOE,EAAIK,IAAI,QACfN,EAAQC,EAAIK,IAAI,SAgBpB,OAbAC,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAAQ,CACVT,KAAMA,EACNC,MAAOA,GAETH,EAAaW,GAEbC,QAAQC,IAAIC,OAAOC,OAAOJ,GAAOK,QAEjCJ,QAAQC,IAAIX,EAAZ,GAEC,KAGD,SAAC,IAAD,WACE,SAAC,KAAD,CACEe,cAAe,CACb5B,SAAU,GACVI,gBAAiB,IAEnByB,SAAWH,IAEPpB,EAAY,CACVS,IAAK,4BACLe,KAAM,CACJ9B,SAAU0B,EAAO1B,SACjBI,gBAAiBsB,EAAOtB,gBACxBS,KAAMH,EAAUG,KAChBC,MAAOJ,EAAUI,SAGlBiB,SACAC,MAAMC,IAELV,QAAQC,IAAIS,GACZC,IAAAA,KAAU,CACRC,KAAM,UACNC,KAAMH,EAAKI,UAGb,IAAIC,EAAQL,EAAKK,MACjBrB,OAAOsB,aAAaC,QAAQ,QAASF,GACrC9B,EAAS,IAAT,IAEDiC,OAAOC,IACNnB,QAAQC,IAAIkB,GACZR,IAAAA,KAAU,CACRC,KAAM,QACNQ,MAAO,UACPP,KAAMM,EAAMT,KAAKI,SAHnB,GAxBJ,EA+BJO,iBAAkB/C,EAtCpB,SAwCG,QAAC,aACAgD,EADA,aAEAC,EAFA,gBAGAC,EAHA,QAIAC,EAJA,QAKAC,EALA,OAMAvB,EANA,OAOAwB,GAPD,SASC,gBAAKC,UAAWC,EAAAA,EAAAA,KAAhB,UACE,gBAAKD,UAAWC,EAAAA,EAAAA,QAAhB,UACE,iBAAKD,UAAWC,EAAAA,EAAAA,KAAhB,WACE,cAAGD,UAAWC,EAAAA,EAAAA,WAAd,8BACA,cAAGC,MAAO,CAAEC,SAAU,GAAIC,WAAY,IAAtC,+CAGA,mBACA,iBAAKJ,UAAWC,EAAAA,EAAAA,UAAhB,WACE,kBAAOI,QAAQ,GAAf,uBACA,kBAAOC,KAAK,WAAWC,YAAY,sBAAuBC,KAAK,WAC7DC,MAAOlC,EAAO1B,SACd6D,SAAUhB,EAAa,cAExBG,EAAQhD,UAAYkD,EAAOlD,WAC1B,cAAGmD,UAAWC,EAAAA,EAAAA,MAAd,SAA8BF,EAAOlD,eAGzC,iBAAKmD,UAAWC,EAAAA,EAAAA,UAAhB,WACE,kBAAOI,QAAQ,GAAf,+BACA,kBAAOC,KAAK,WAAWC,YAAY,oBAAoBC,KAAK,kBAC1DC,MAAOlC,EAAOtB,gBACdyD,SAAUhB,EAAa,qBAExBG,EAAQ5C,iBAAmB8C,EAAO9C,kBACjC,cAAG+C,UAAWC,EAAAA,EAAAA,MAAd,SAA8BF,EAAO9C,sBAIzC,gBAAK+C,UAAWC,EAAAA,EAAAA,UAAhB,UACE,mBAAQK,KAAK,SAASK,QAAS,IAAMhB,IAArC,4BAvCT,KAgDR,C,kCC7ID,SAAgB,KAAO,oBAAoB,QAAU,uBAAuB,WAAa,0BAA0B,SAAW,wBAAwB,KAAO,oBAAoB,UAAY,yBAAyB,MAAQ,qB","sources":["components/pages/Forms/ResetPassword.tsx","webpack://my-app/./src/Styles/Login.module.css?fbf6"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Wrapper from \"../../UI/Wrapper/Wrapper\";\nimport classes from \"../../../Styles/Login.module.css\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { usePostRequestMutation } from \"../../../store/services/users\";\nimport Swal from \"sweetalert2\";\n\nconst FormSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(8)\n    .matches(\n      /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/,\n      \"Password must contain at least 8 characters, one uppercase letter, one lowercase letter, one number, and one special character.\"\n    )\n    .required(\"Password is required\"),\n  confirmPassword: Yup.string()\n    .min(8, \"Confirm password must be 8 characters long\")\n    .oneOf([Yup.ref(\"password\")], \"Password did not match\")\n    .required(\"Confirm password is required\"),\n});\n\nfunction ResetPassword() {\n  const [PostRequest] = usePostRequestMutation();\n  const navigate = useNavigate();\n  let [queryData, setQueryData] = useState<{\n    code: string;\n    email: string;\n  }>({\n    code: \"\",\n    email: \"\",\n  });\n\n  let url = new URLSearchParams(window.location.search);\n  let code = url.get(\"code\") as unknown as string;\n  let email = url.get(\"email\") as unknown as string;\n\n\n  useEffect(() => {\n    let _data = {\n      code: code,\n      email: email,\n    };\n    setQueryData(_data);\n\n    console.log(Object.values(_data).length);\n\n    console.log(code)\n    \n  }, []);\n\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={{\n          password: \"\",\n          confirmPassword: ''\n        }}\n        onSubmit={(values) => {\n\n            PostRequest({\n              url: \"/reset-forgotten-password\",\n              body: {\n                password: values.password,\n                confirmPassword: values.confirmPassword,\n                code: queryData.code,\n                email: queryData.email\n              },\n            })\n              .unwrap()\n              .then((data) => {\n\n                console.log(data);\n                Swal.fire({\n                  icon: \"success\",\n                  text: data.message,\n                });\n                \n                let token = data.token;\n                window.localStorage.setItem(\"token\", token);\n                navigate(\"/\")\n              })\n              .catch((error) => {\n                console.log(error);\n                Swal.fire({\n                  icon: \"error\",\n                  title: \"Oops...\",\n                  text: error.data.message,\n                });\n              });\n        }}\n        validationSchema={FormSchema}\n      >\n        {({\n          handleChange,\n          handleSubmit,\n          setFieldTouched,\n          touched,\n          isValid,\n          values,\n          errors,\n        }) => (\n          <div className={classes.main}>\n            <div className={classes.wrapper}>\n              <div className={classes.form}>\n                <p className={classes.form_title}>Change Password</p>\n                <p style={{ fontSize: 12, marginTop: -10 }}>\n                  Please enter a stronger password\n                </p>\n                <br />\n                <div className={classes.form_list}>\n                  <label htmlFor=\"\">Password</label>\n                  <input type=\"password\" placeholder=\"Enter your password\"  name=\"password\"\n                    value={values.password}\n                    onChange={handleChange(\"password\")}\n                  />\n                  {touched.password && errors.password && (\n                    <p className={classes.error}>{errors.password}</p>\n                  )}\n                </div>\n                <div className={classes.form_list}>\n                  <label htmlFor=\"\">Confirm Password</label>\n                  <input type=\"password\" placeholder=\"Confirm  password\" name=\"confirmPassword\"\n                    value={values.confirmPassword}\n                    onChange={handleChange(\"confirmPassword\")}\n                  />\n                  {touched.confirmPassword && errors.confirmPassword && (\n                    <p className={classes.error}>{errors.confirmPassword}</p>\n                  )}\n                </div>\n\n                <div className={classes.form_list}>\n                  <button type=\"submit\" onClick={() => handleSubmit()}>Update</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n}\n\nexport default ResetPassword;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Login_main__-Woik\",\"wrapper\":\"Login_wrapper__olPZx\",\"form_title\":\"Login_form_title__SPX-U\",\"form_row\":\"Login_form_row__QlWgU\",\"form\":\"Login_form__aduzR\",\"form_list\":\"Login_form_list__uNq9C\",\"error\":\"Login_error__VGhM-\"};"],"names":["FormSchema","Yup","shape","password","min","matches","required","confirmPassword","oneOf","PostRequest","usePostRequestMutation","navigate","useNavigate","queryData","setQueryData","useState","code","email","url","URLSearchParams","window","location","search","get","useEffect","_data","console","log","Object","values","length","initialValues","onSubmit","body","unwrap","then","data","Swal","icon","text","message","token","localStorage","setItem","catch","error","title","validationSchema","handleChange","handleSubmit","setFieldTouched","touched","isValid","errors","className","classes","style","fontSize","marginTop","htmlFor","type","placeholder","name","value","onChange","onClick"],"sourceRoot":""}