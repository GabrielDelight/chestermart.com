{"version":3,"file":"static/js/499.5610d088.chunk.js","mappings":"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","sources":["components/pages/Forms/SignUp.tsx","webpack://my-app/./src/Styles/Login.module.css?fbf6"],"sourcesContent":["import React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Wrapper from \"../../UI/Wrapper/Wrapper\";\nimport classes from \"../../../Styles/Login.module.css\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { usePostRequestMutation } from \"../../../store/services/users\";\nimport Swal from \"sweetalert2\";\n\nconst FormSchema = Yup.object().shape({\n  firstname: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Please enter your first name\"),\n  lastname: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Please eneter your last name\"),\n  email: Yup.string()\n    .email(\"Invalid email address\")\n    .required(\"Your valid email is required\"),\n  phoneNumber: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(190, \"Too Long!\")\n    .required(\"Phone number is required\"),\n  password: Yup.string()\n    .min(8)\n    .matches(\n      /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/,\n      \"Password must contain at least 8 characters, one uppercase letter, one lowercase letter, one number, and one special character.\"\n    )\n    .required(\"Password is required\"),\n  confirmPassword: Yup.string()\n    .min(8, \"Confirm password must be 8 characters long\")\n    .oneOf([Yup.ref(\"password\")], \"Password did not match\")\n    .required(\"Confirm password is required\"),\n});\n\nfunction SignUp() {\n  const [PostRequest] = usePostRequestMutation();\n\n  const navigate = useNavigate();\n\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={{\n          firstname: \"\",\n          lastname: \"\",\n          email: \"\",\n          phoneNumber: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n        }}\n        onSubmit={(values) => {\n          PostRequest({\n            url: \"/signup\",\n            body: values,\n          })\n            .unwrap()\n            .then((data) => {\n              console.log(data);\n              navigate(\"/login\");\n            })\n            .catch((error) => {\n              Swal.fire({\n                icon: \"error\",\n                title: \"Oops...\",\n                text: error.data.message,\n              });\n\n              console.log(error);\n            });\n        }}\n        validationSchema={FormSchema}\n      >\n        {({\n          handleChange,\n          handleSubmit,\n          setFieldTouched,\n          touched,\n          isValid,\n          values,\n          errors,\n        }) => (\n          <div className={classes.main}>\n            <div className={classes.wrapper}>\n              <div className={classes.form}>\n                <p className={classes.form_title}>Register now</p>\n\n                <div className={classes.form_row}>\n                  <div>\n                    <label htmlFor=\"\">First Name</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"John\"\n                      name=\"firstname\"\n                      value={values.firstname}\n                      onChange={handleChange(\"firstname\")}\n                    />\n                    {touched.firstname && errors.firstname && (\n                      <p className={classes.error}>{errors.firstname}</p>\n                    )}\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"\">Last Name</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Smith\"\n                      name=\"lastname\"\n                      value={values.lastname}\n                      onChange={handleChange(\"lastname\")}\n                    />\n                    {touched.lastname && errors.lastname && (\n                      <p className={classes.error}>{errors.lastname}</p>\n                    )}\n                  </div>\n                </div>\n                <div className={classes.form_row}>\n                  <div>\n                    <label htmlFor=\"\">E-mail Address</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"johnsmith@email.com\"\n                      name=\"email\"\n                      value={values.email}\n                      onChange={handleChange(\"email\")}\n                    />\n                    {touched.email && errors.email && (\n                      <p className={classes.error}>{errors.email}</p>\n                    )}\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"\">Phone number</label>\n                    <input\n                      type=\"number\"\n                      placeholder=\"+123 456 789\"\n                      name=\"phoneNumber\"\n                      value={values.phoneNumber}\n                      onChange={handleChange(\"phoneNumber\")}\n                    />\n                    {touched.phoneNumber && errors.phoneNumber && (\n                      <p className={classes.error}>{errors.phoneNumber}</p>\n                    )}\n                  </div>\n                </div>\n                <div className={classes.form_list}>\n                  <label htmlFor=\"\">Password</label>\n                  <input\n                    type=\"password\"\n                    placeholder=\"Enter your password\"\n                    name=\"password\"\n                    value={values.password}\n                    onChange={handleChange(\"password\")}\n                  />\n                  {touched.password && errors.password && (\n                    <p className={classes.error}>{errors.password}</p>\n                  )}\n                </div>\n                <div className={classes.form_list}>\n                  <label htmlFor=\"\">Confirm password</label>\n                  <input\n                    type=\"password\"\n                    placeholder=\"Confirm your password\"\n                    name=\"confirmPassword\"\n                    value={values.confirmPassword}\n                    onChange={handleChange(\"confirmPassword\")}\n                  />\n                  {touched.confirmPassword && errors.confirmPassword && (\n                    <p className={classes.error}>{errors.confirmPassword}</p>\n                  )}\n                </div>\n\n                <div className={classes.form_list}>\n                  <button type=\"submit\" onClick={() => handleSubmit()}>Submit</button>\n                </div>\n\n                <p>\n                  Already have an account? <Link to={\"/login\"}>Login</Link>.\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n}\n\nexport default SignUp;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Login_main__-Woik\",\"wrapper\":\"Login_wrapper__olPZx\",\"form_title\":\"Login_form_title__SPX-U\",\"form_row\":\"Login_form_row__QlWgU\",\"form\":\"Login_form__aduzR\",\"form_list\":\"Login_form_list__uNq9C\",\"error\":\"Login_error__VGhM-\"};"],"names":["FormSchema","Yup","shape","firstname","min","max","required","lastname","email","phoneNumber","password","matches","confirmPassword","oneOf","PostRequest","usePostRequestMutation","navigate","useNavigate","initialValues","onSubmit","values","url","body","unwrap","then","data","console","log","catch","error","Swal","icon","title","text","message","validationSchema","handleChange","handleSubmit","setFieldTouched","touched","isValid","errors","className","classes","htmlFor","type","placeholder","name","value","onChange","onClick","to"],"sourceRoot":""}