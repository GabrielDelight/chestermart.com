{"version":3,"file":"static/js/371.cbf2374e.chunk.js","mappings":"8JACA,QAAuB,0BAAvB,EAA2D,6BAA3D,EAAmG,8BAAnG,EAAwI,0BAAxI,EAA8K,+BAA9K,EAA+N,qCAA/N,EAA0Q,yBAA1Q,EAA2S,2BAA3S,EAA6U,0B,aCG7U,MA2DA,EA3DgD,IAGzC,IAH0C,eAC/CA,EAD+C,gBAE/CC,GACI,EACJ,OACE,gBAAKC,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WACE,+BACE,0CAEA,SAAC,MAAD,CAASC,QAASJ,QAEpB,iBAAKE,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,4BACE,kBAAOE,QAAQ,GAAf,0BACA,kBAAOC,KAAK,OAAOC,YAAY,0BAGjC,4BACE,kBAAOF,QAAQ,GAAf,kBACA,kBAAOC,KAAK,OAAOC,YAAY,eAInC,iBAAKL,UAAWC,EAAhB,WACE,kBAAOE,QAAQ,GAAf,+BACA,kBAAOC,KAAK,SAASC,YAAY,mBAGnC,iBAAKL,UAAWC,EAAhB,WACE,kBAAOE,QAAQ,GAAf,8BACA,kBAAOC,KAAK,SAASC,YAAY,mBAGnC,iBAAKL,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,kBAAOE,QAAQ,GAAf,kBACA,kBAAOC,KAAK,OAAOC,YAAY,0BAGjC,iBAAKL,UAAWC,EAAhB,WACE,kBAAOE,QAAQ,GAAf,uBACA,kBAAOC,KAAK,OAAOC,YAAY,YAGjC,iBAAKL,UAAWC,EAAhB,WACE,kBAAOE,QAAQ,GAAf,mBACA,kBAAOC,KAAK,OAAOC,YAAY,eAInC,mBAAQH,QAASH,EAAjB,gDAhDR,E,cCPF,SAAgB,KAAO,uBAAuB,UAAY,4BAA4B,QAAU,0BAA0B,QAAU,0BAA0B,WAAa,6BAA6B,SAAW,2BAA2B,KAAO,uBAAuB,UAAY,4BAA4B,gBAAkB,kCAAkC,YAAc,8BAA8B,MAAQ,yB,qDCU5Z,MAAMO,EAAaC,EAAAA,KAAaC,MAAM,CACpCC,UAAWF,EAAAA,KACRG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,gCACZC,SAAUN,EAAAA,KACPG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,gCACZE,MAAOP,EAAAA,KACJO,MAAM,yBACNF,SAAS,gCACZG,YAAaR,EAAAA,KACVG,IAAI,EAAG,cACPC,IAAI,IAAK,aACTC,SAAS,4BACZI,QAAST,EAAAA,KACNG,IAAI,EAAG,cACPC,IAAI,IAAK,aACTC,SAAS,uBAEZK,MAAOV,EAAAA,KACJG,IAAI,EAAG,cACPC,IAAI,IAAK,aACTC,SAAS,qBAEZM,KAAMX,EAAAA,KACHG,IAAI,EAAG,cACPC,IAAI,IAAK,aACTC,SAAS,oBAEZO,QAASZ,EAAAA,KACNG,IAAI,EAAG,cACPC,IAAI,IAAK,aACTC,SAAS,uBAEZQ,WAAYb,EAAAA,KACTG,IAAI,EAAG,cACPC,IAAI,IAAK,aACTC,SAAS,oCA+Sd,QA5SA,WACE,MAAMS,GAAWC,EAAAA,EAAAA,OACVC,EAAkBC,IAAuBC,EAAAA,EAAAA,WAAkB,IAC3DC,GAAa,UAAEC,KAAeC,EAAAA,EAAAA,MAE/BC,EAAgB,KACpBL,GAAqBD,EAArB,GASKO,EAASC,IAAcN,EAAAA,EAAAA,UAAc,CAAC,GAgC7C,OACE,UAACO,EAAA,EAAD,YACE,kBAAMhC,UAAWC,EAAAA,KAAjB,WACE,gCACE,cAAGD,UAAWC,EAAAA,QAAd,uBACA,gBAAKD,UAAWC,EAAAA,QAAhB,UACE,iFAEE,kBAFF,oCAOF,SAAC,KAAD,CACEgC,cAAe,CACbxB,UAAW,GACXI,SAAU,GACVC,MAAO,GACPC,YAAa,GACbC,QAAS,GACTC,MAAO,GACPC,KAAM,GACNC,QAAS,GACTC,WAAY,IAEdc,SAAWC,IACTN,IAEAE,EAAWI,EAAX,EAEFC,iBAAkB9B,EAjBpB,SAmBG,QAAC,aACA+B,EADA,aAEAC,EAFA,gBAGAC,EAHA,QAIAC,EAJA,QAKAC,EALA,OAMAN,EANA,OAOAO,GAPD,SASC,iBAAK1C,UAAWC,EAAAA,KAAhB,WACE,cAAGD,UAAWC,EAAAA,WAAd,8BAEA,iBAAKD,UAAWC,EAAAA,SAAhB,WACE,4BACE,kBAAOE,QAAQ,GAAf,yBACA,kBACEC,KAAK,OACLC,YAAY,OACZsC,KAAK,YACLC,MAAOT,EAAO1B,UACdoC,SAAUR,EAAa,eAExBG,EAAQ/B,WAAaiC,EAAOjC,YAC3B,cAAGT,UAAWC,EAAAA,MAAd,SAA8ByC,EAAOjC,gBAIzC,4BACE,kBAAON,QAAQ,GAAf,wBACA,kBACEC,KAAK,OACLC,YAAY,QACZsC,KAAK,WACLC,MAAOT,EAAOtB,SACdgC,SAAUR,EAAa,cAExBG,EAAQ3B,UAAY6B,EAAO7B,WAC1B,cAAGb,UAAWC,EAAAA,MAAd,SAA8ByC,EAAO7B,kBAI3C,iBAAKb,UAAWC,EAAAA,SAAhB,WACE,4BACE,kBAAOE,QAAQ,GAAf,6BACA,kBACEC,KAAK,OACLC,YAAY,sBACZsC,KAAK,QACLC,MAAOT,EAAOrB,MACd+B,SAAUR,EAAa,WAExBG,EAAQ1B,OAAS4B,EAAO5B,QACvB,cAAGd,UAAWC,EAAAA,MAAd,SAA8ByC,EAAO5B,YAIzC,4BACE,kBAAOX,QAAQ,GAAf,2BACA,kBACEC,KAAK,SACLC,YAAY,eACZsC,KAAK,cACLC,MAAOT,EAAOpB,YACd8B,SAAUR,EAAa,iBAExBG,EAAQzB,aAAe2B,EAAO3B,cAC7B,cAAGf,UAAWC,EAAAA,MAAd,SAA8ByC,EAAO3B,qBAK3C,iBAAKf,UAAWC,EAAAA,UAAhB,WACE,kBAAOE,QAAQ,GAAf,sBACA,kBACEC,KAAK,OACLC,YAAY,6BACZsC,KAAK,UACLC,MAAOT,EAAOnB,QACd6B,SAAUR,EAAa,aAExBG,EAAQxB,SAAW0B,EAAO1B,UACzB,cAAGhB,UAAWC,EAAAA,MAAd,SAA8ByC,EAAO1B,cAGzC,iBAAKhB,UAAWC,EAAAA,UAAhB,WACE,kBAAOE,QAAQ,GAAf,oBACA,kBACEC,KAAK,OACLC,YAAY,mBACZsC,KAAK,QACLC,MAAOT,EAAOlB,MACd4B,SAAUR,EAAa,WAExBG,EAAQvB,OAASyB,EAAOzB,QACvB,cAAGjB,UAAWC,EAAAA,MAAd,SAA8ByC,EAAOzB,YAGzC,iBAAKjB,UAAWC,EAAAA,UAAhB,WACE,kBAAOE,QAAQ,GAAf,mBACA,kBACEC,KAAK,OACLC,YAAY,kBACZsC,KAAK,OACLC,MAAOT,EAAOjB,KACd2B,SAAUR,EAAa,UAExBG,EAAQtB,MAAQwB,EAAOxB,OACtB,cAAGlB,UAAWC,EAAAA,MAAd,SAA8ByC,EAAOxB,WAGzC,iBAAKlB,UAAWC,EAAAA,UAAhB,WACE,kBAAOE,QAAQ,GAAf,sBACA,kBACEC,KAAK,OACLC,YAAY,2BACZsC,KAAK,UACLC,MAAOT,EAAOhB,QACd0B,SAAUR,EAAa,aAExBG,EAAQrB,SAAWuB,EAAOvB,UACzB,cAAGnB,UAAWC,EAAAA,MAAd,SAA8ByC,EAAOvB,cAIzC,iBAAKnB,UAAWC,EAAAA,SAAhB,WACE,4BACE,kBAAOE,QAAQ,GAAf,gCACA,kBACEC,KAAK,OACLC,YAAY,2BACZsC,KAAK,aACLC,MAAOT,EAAOf,WACdyB,SAAUR,EAAa,gBAExBG,EAAQpB,YAAcsB,EAAOtB,aAC5B,cAAGpB,UAAWC,EAAAA,MAAd,SAA8ByC,EAAOtB,iBAIzC,4BACE,kBAAOjB,QAAQ,GAAf,sCACA,kBACEC,KAAK,OACLC,YAAY,0CAKlB,gBAAKL,UAAWC,EAAAA,UAAhB,UACE,mBAAQG,KAAK,SAASF,QAAS,IAAMoC,IAArC,SACGX,EAAY,iBAAmB,aAtJvC,QA8JL,8BACE,iBAAK3B,UAAWC,EAAAA,UAAhB,WACE,mBACA,mBACA,sBAEF,iBAAKD,UAAWC,EAAAA,QAAhB,WACE,4DACA,cAAG6C,KAAK,OAAR,+CAGF,iBAAK9C,UAAWC,EAAAA,YAAhB,WACE,cAAGD,UAAWC,EAAAA,WAAd,8BAEA,iBAAKD,UAAWC,EAAAA,gBAAhB,WACE,SAAC,MAAD,KACA,4BACE,2CACgB,0CAEhB,gDACqB,4CAErB,iCACM,oDAKZ,iBAAKD,UAAWC,EAAAA,YAAhB,WACE,cAAGD,UAAWC,EAAAA,WAAd,8BAEA,iBAAKD,UAAWC,EAAAA,gBAAhB,WACE,SAAC,MAAD,KACA,0BACE,iDAIN,iBAAKD,UAAWC,EAAAA,YAAhB,WACE,cAAGD,UAAWC,EAAAA,WAAd,yBAEA,gBAAKD,UAAWC,EAAAA,yBAStB,8BACGsB,IACC,SAAC,EAAD,CACEzB,eAAgB+B,EAChB9B,gBAnRe,KACvB,MAAMgD,EAAQC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,SAAW,MAEhE1B,EAAY,CACV2B,IAAK,UACLC,KAAM,CACJP,MAAOC,KAAKO,UAAUR,GACtBS,aAAc1B,KAGf2B,SACAC,MAAMC,IACLC,IAAAA,KAAU,CACRC,KAAM,UACNC,MAAOH,EAAKI,UAEdb,OAAOC,aAAaa,WAAW,QAC/B3C,EAAS,YAAT,IAED4C,OAAOC,IACNN,IAAAA,KAAU,CACRC,KAAM,QACNC,MAAO,UACPK,KAAMD,EAAMP,KAAKI,UAGnBK,QAAQC,IAAIH,EAAZ,GAvBJ,QAsRH,C","sources":["webpack://my-app/./src/components/CardPayment/CardPayment.module.css?11af","components/CardPayment/CardPayment.tsx","webpack://my-app/./src/Styles/Checkout.module.css?fb3a","components/pages/Checkout.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"CardPayment_main__iPqVF\",\"wrapper\":\"CardPayment_wrapper__BW4TN\",\"form_row\":\"CardPayment_form_row__JVD9J\",\"form\":\"CardPayment_form__oHsbc\",\"form_list\":\"CardPayment_form_list__DBysU\",\"expiration_date\":\"CardPayment_expiration_date__iUdqa\",\"day\":\"CardPayment_day__BH+VX\",\"month\":\"CardPayment_month__IOpX5\",\"year\":\"CardPayment_year__AgkWR\"};","import React from \"react\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { CardPaymentTypes } from \"../../types/types\";\nimport classes from \"./CardPayment.module.css\";\nconst CardPayment: React.FC<CardPaymentTypes> = ({\n  onClodeHandler,\n  onSubmitHandler,\n}) => {\n  return (\n    <div className={classes.main}>\n      <div className={classes.wrapper}>\n        <header>\n          <h3>Card Payment</h3>\n\n          <FaTimes onClick={onClodeHandler} />\n        </header>\n        <div className={classes.form}>\n          <div className={classes.form_row}>\n            <div>\n              <label htmlFor=\"\">CARD NUMBER</label>\n              <input type=\"text\" placeholder=\"1234 123 1234 123\" />\n            </div>\n\n            <div>\n              <label htmlFor=\"\">CVC</label>\n              <input type=\"text\" placeholder=\"000\" />\n            </div>\n          </div>\n\n          <div className={classes.form_list}>\n            <label htmlFor=\"\">CARD HOLDER NAME</label>\n            <input type=\"number\" placeholder=\"John Smith\" />\n          </div>\n\n          <div className={classes.form_list}>\n            <label htmlFor=\"\">EXPIRATION DATE</label>\n            <input type=\"number\" placeholder=\"John Smith\" />\n          </div>\n\n          <div className={classes.expiration_date}>\n            <div className={classes.day}>\n              <label htmlFor=\"\">DAY</label>\n              <input type=\"text\" placeholder=\"1234 123 1234 123\" />\n            </div>\n\n            <div className={classes.month}>\n              <label htmlFor=\"\">CMONTHVC</label>\n              <input type=\"text\" placeholder=\"000\" />\n            </div>\n\n            <div className={classes.year}>\n              <label htmlFor=\"\">YEAR</label>\n              <input type=\"text\" placeholder=\"000\" />\n            </div>\n          </div>\n\n          <button onClick={onSubmitHandler}>COMPLETE ORDER (TOTAL: 200)</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CardPayment;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Checkout_main__FdGFU\",\"break_div\":\"Checkout_break_div__DAACy\",\"xx_text\":\"Checkout_xx_text__hUGXo\",\"caution\":\"Checkout_caution__Hqt0I\",\"form_title\":\"Checkout_form_title__Y30H3\",\"form_row\":\"Checkout_form_row__jG+bw\",\"form\":\"Checkout_form__SXlEN\",\"form_list\":\"Checkout_form_list__2iu+h\",\"methods_wrapper\":\"Checkout_methods_wrapper__Ww6yB\",\"method_main\":\"Checkout_method_main__IhEpt\",\"error\":\"Checkout_error__-WA2c\"};","import React, { useState } from \"react\";\nimport { FaCheckCircle, FaExclamationCircle } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\nimport CardPayment from \"../CardPayment/CardPayment\";\nimport Wrapper from \"../UI/Wrapper/Wrapper\";\nimport classes from \"../../Styles/Checkout.module.css\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Swal from \"sweetalert2\";\nimport { usePostRequestMutation } from \"../../store/services/users\";\n\nconst FormSchema = Yup.object().shape({\n  firstname: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Please enter your first name\"),\n  lastname: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Please eneter your last name\"),\n  email: Yup.string()\n    .email(\"Invalid email address\")\n    .required(\"Your valid email is required\"),\n  phoneNumber: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(190, \"Too Long!\")\n    .required(\"Phone number is required\"),\n  country: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(190, \"Too Long!\")\n    .required(\"Country is required\"),\n\n  state: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(190, \"Too Long!\")\n    .required(\"State is required\"),\n\n  city: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(190, \"Too Long!\")\n    .required(\"City is required\"),\n\n  address: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(190, \"Too Long!\")\n    .required(\"Address is required\"),\n\n  postalCode: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(190, \"Too Long!\")\n    .required(\"Postal or zip code is required\"),\n});\n\nfunction Checkout() {\n  const navigate = useNavigate();\n  const [showPaymentModal, setShowPaymentModal] = useState<boolean>(false);\n  const [PostRequest, { isLoading }] = usePostRequestMutation();\n\n  const togglePayment = () => {\n    setShowPaymentModal(!showPaymentModal);\n  };\n\n  const onSubmitHandler = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    togglePayment();\n    //   navigate(\"/payment\")\n  };\n\n  const [_values, _setValues] = useState<any>({});\n\n  const onPaymentHandler = () => {\n    const carts = JSON.parse(window.localStorage.getItem(\"cart\") || \"[]\");\n\n    PostRequest({\n      url: \"/orders\",\n      body: {\n        carts: JSON.stringify(carts),\n        orderDetails: _values,\n      },\n    })\n      .unwrap()\n      .then((data) => {\n        Swal.fire({\n          icon: \"success\",\n          title: data.message,\n        });\n        window.localStorage.removeItem(\"cart\");\n        navigate(\"/my-order\");\n      })\n      .catch((error) => {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Oops...\",\n          text: error.data.message,\n        });\n\n        console.log(error);\n      });\n  };\n\n  return (\n    <Wrapper>\n      <main className={classes.main}>\n        <article>\n          <p className={classes.xx_text}>Checkout</p>\n          <div className={classes.caution}>\n            <p>\n              To pruchase product (s) must fill in the datat first\n              <br />\n              Please fill them correctly.\n            </p>\n          </div>\n\n          <Formik\n            initialValues={{\n              firstname: \"\",\n              lastname: \"\",\n              email: \"\",\n              phoneNumber: \"\",\n              country: \"\",\n              state: \"\",\n              city: \"\",\n              address: \"\",\n              postalCode: \"\",\n            }}\n            onSubmit={(values) => {\n              togglePayment();\n\n              _setValues(values);\n            }}\n            validationSchema={FormSchema}\n          >\n            {({\n              handleChange,\n              handleSubmit,\n              setFieldTouched,\n              touched,\n              isValid,\n              values,\n              errors,\n            }) => (\n              <div className={classes.form}>\n                <p className={classes.form_title}>Billing Details</p>\n\n                <div className={classes.form_row}>\n                  <div>\n                    <label htmlFor=\"\">First Name</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"John\"\n                      name=\"firstname\"\n                      value={values.firstname}\n                      onChange={handleChange(\"firstname\")}\n                    />\n                    {touched.firstname && errors.firstname && (\n                      <p className={classes.error}>{errors.firstname}</p>\n                    )}\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"\">Last Name</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Smith\"\n                      name=\"lastname\"\n                      value={values.lastname}\n                      onChange={handleChange(\"lastname\")}\n                    />\n                    {touched.lastname && errors.lastname && (\n                      <p className={classes.error}>{errors.lastname}</p>\n                    )}\n                  </div>\n                </div>\n                <div className={classes.form_row}>\n                  <div>\n                    <label htmlFor=\"\">E-mail Address</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"johnsmith@email.com\"\n                      name=\"email\"\n                      value={values.email}\n                      onChange={handleChange(\"email\")}\n                    />\n                    {touched.email && errors.email && (\n                      <p className={classes.error}>{errors.email}</p>\n                    )}\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"\">Phone number</label>\n                    <input\n                      type=\"number\"\n                      placeholder=\"+123 456 789\"\n                      name=\"phoneNumber\"\n                      value={values.phoneNumber}\n                      onChange={handleChange(\"phoneNumber\")}\n                    />\n                    {touched.phoneNumber && errors.phoneNumber && (\n                      <p className={classes.error}>{errors.phoneNumber}</p>\n                    )}\n                  </div>\n                </div>\n\n                <div className={classes.form_list}>\n                  <label htmlFor=\"\">Country</label>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter your billing country\"\n                    name=\"country\"\n                    value={values.country}\n                    onChange={handleChange(\"country\")}\n                  />\n                  {touched.country && errors.country && (\n                    <p className={classes.error}>{errors.country}</p>\n                  )}\n                </div>\n                <div className={classes.form_list}>\n                  <label htmlFor=\"\">State</label>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter your state\"\n                    name=\"state\"\n                    value={values.state}\n                    onChange={handleChange(\"state\")}\n                  />\n                  {touched.state && errors.state && (\n                    <p className={classes.error}>{errors.state}</p>\n                  )}\n                </div>\n                <div className={classes.form_list}>\n                  <label htmlFor=\"\">City</label>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter your city\"\n                    name=\"city\"\n                    value={values.city}\n                    onChange={handleChange(\"city\")}\n                  />\n                  {touched.city && errors.city && (\n                    <p className={classes.error}>{errors.city}</p>\n                  )}\n                </div>\n                <div className={classes.form_list}>\n                  <label htmlFor=\"\">Address</label>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter your house address\"\n                    name=\"address\"\n                    value={values.address}\n                    onChange={handleChange(\"address\")}\n                  />\n                  {touched.address && errors.address && (\n                    <p className={classes.error}>{errors.address}</p>\n                  )}\n                </div>\n\n                <div className={classes.form_row}>\n                  <div>\n                    <label htmlFor=\"\">Postalcode or Zip</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Enter postal or zip code\"\n                      name=\"postalCode\"\n                      value={values.postalCode}\n                      onChange={handleChange(\"postalCode\")}\n                    />\n                    {touched.postalCode && errors.postalCode && (\n                      <p className={classes.error}>{errors.postalCode}</p>\n                    )}\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"\">Company Name (optional)</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Enter your company name if any\"\n                    />\n                  </div>\n                </div>\n\n                <div className={classes.form_list}>\n                  <button type=\"button\" onClick={() => handleSubmit()}>\n                    {isLoading ? \"Please wait...\" : \"Next\"}\n                  </button>\n                </div>\n              </div>\n            )}\n          </Formik>\n        </article>\n\n        <aside>\n          <div className={classes.break_div}>\n            <br />\n            <br />\n            <br />\n          </div>\n          <div className={classes.caution}>\n            <h4>Have a promocode or Gift card?</h4>\n            <a href=\"####\">Click here to enter your code</a>\n          </div>\n\n          <div className={classes.method_main}>\n            <p className={classes.form_title}>Shipping Method</p>\n\n            <div className={classes.methods_wrapper}>\n              <FaExclamationCircle />\n              <div>\n                <p>\n                  FedEx Freight <small>(free)</small>\n                </p>\n                <p>\n                  USPS International <small>(45.34)%</small>\n                </p>\n                <p>\n                  DHL <small>(4.34)%</small>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className={classes.method_main}>\n            <p className={classes.form_title}>Shipping Method</p>\n\n            <div className={classes.methods_wrapper}>\n              <FaCheckCircle />\n              <div>\n                <p>Card payment</p>\n              </div>\n            </div>\n          </div>\n          <div className={classes.method_main}>\n            <p className={classes.form_title}>Your Order</p>\n\n            <div className={classes.cart_wrapper}>\n              {/* {[1, 2, 3, 4].map((item) => {\n                return <CartList />;\n              })} */}\n            </div>\n          </div>\n        </aside>\n      </main>\n\n      <>\n        {showPaymentModal && (\n          <CardPayment\n            onClodeHandler={togglePayment}\n            onSubmitHandler={onPaymentHandler}\n          />\n        )}\n      </>\n    </Wrapper>\n  );\n}\n\nexport default Checkout;\n"],"names":["onClodeHandler","onSubmitHandler","className","classes","onClick","htmlFor","type","placeholder","FormSchema","Yup","shape","firstname","min","max","required","lastname","email","phoneNumber","country","state","city","address","postalCode","navigate","useNavigate","showPaymentModal","setShowPaymentModal","useState","PostRequest","isLoading","usePostRequestMutation","togglePayment","_values","_setValues","Wrapper","initialValues","onSubmit","values","validationSchema","handleChange","handleSubmit","setFieldTouched","touched","isValid","errors","name","value","onChange","href","carts","JSON","parse","window","localStorage","getItem","url","body","stringify","orderDetails","unwrap","then","data","Swal","icon","title","message","removeItem","catch","error","text","console","log"],"sourceRoot":""}