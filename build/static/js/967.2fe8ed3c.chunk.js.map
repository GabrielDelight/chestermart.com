{"version":3,"file":"static/js/967.2fe8ed3c.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/UI/Ratings/CreateRatings.module.css?6545","components/UI/Ratings/CreateRatings.tsx","webpack://my-app/./src/components/Cart/CartList.module.css?cc9c","components/Cart/CartList.tsx","webpack://my-app/./src/Styles/Cart.module.css?aa1a","components/pages/Cart.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"CreateRatings_container__QdrFd\",\"wrapper\":\"CreateRatings_wrapper__CxQ8N\",\"star_wrapper\":\"CreateRatings_star_wrapper__ZmWve\"};","import React, { useState } from \"react\";\nimport { BsStar, BsStarFill } from \"react-icons/bs\";\nimport { FaTimes } from \"react-icons/fa\";\nimport Swal from \"sweetalert2\";\nimport { usePostRequestMutation } from \"../../../store/services/users\";\nimport { CreateRatingsTypes } from \"../../../types/types\";\nimport classes from \"./CreateRatings.module.css\";\n\nconst CreateRatings: React.FC<CreateRatingsTypes> = ({productId, onCloseHandler}) => {\n   const [PostRequest] = usePostRequestMutation();\n  let [rating, setRating] = useState<number>(0);\n  let [comment, setComments] = useState<string>(\"\");\n\n  const setRatings = (index: number) => {\n   setRating(index + 1)\n  }\n\n  const onSubmitHandler = () => {\n   if(rating < 1) return alert(\"Please give a rating\")\n   if(comment.length < 1) return alert(\"Please enter your review\")\n\n   PostRequest({\n      url: \"/ratings\",\n      body: {\n         rating,\n         comment,\n         productId\n\n      },\n    })\n      .unwrap()\n      .then((data) => {\n        console.log(data);\n\n        Swal.fire({\n         icon: \"success\",\n         text: data.message,\n       });\n       onCloseHandler()\n      //   Navigate(\"/admin/dashboard\");\n      })\n      .catch((error) => {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Oops...\",\n          text: error.data.message,\n        });\n\n        console.log(error);\n      });\n  }\n\n  return (\n    <div className={classes.container} id=\"wrapper-close\">\n      <div className={classes.wrapper}>\n        <header>\n          <p>Ratings and Review</p>\n          <FaTimes onClick={onCloseHandler} />\n        </header>\n\n        <div>\n          <div className={classes.star_wrapper}>\n            {[0, 1, 2, 3, 4].map((index) => {\n              return (\n                <div key={index} onClick={() => setRatings(index)}>\n                  {rating <= index ? (\n                     <BsStar color=\"chocolate\" size={25} />\n                     ) : (\n                     <BsStarFill color=\"chocolate\" size={25} />\n                  )}\n                </div>\n              );\n            })}\n          </div>\n          <textarea onChange={(e) => setComments(e.target.value)} placeholder=\"Enter a review\" name=\"\" id=\"\" maxLength={100} ></textarea>\n          <button onClick={onSubmitHandler}>Submit</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateRatings;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"CartList_main__nKEPP\",\"img_wrapper\":\"CartList_img_wrapper__0sepj\",\"details_wrapper\":\"CartList_details_wrapper__kS+N6\",\"qty_wrapper\":\"CartList_qty_wrapper__oawpH\",\"cart_btn\":\"CartList_cart_btn__wt2wI\",\"btn_wrapper\":\"CartList_btn_wrapper__xfOEy\",\"big_txt\":\"CartList_big_txt__mjvt5\",\"price_wrapper\":\"CartList_price_wrapper__KOTCf\",\"product_code\":\"CartList_product_code__TltAS\"};","import React, { useState } from \"react\";\nimport { FaChevronLeft, FaChevronRight, FaTrash } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport { ProductUrl } from \"../../ImageUrl/ImageUrl\";\nimport { CartListTypes } from \"../../types/types\";\nimport LazyImage from \"../LazzyLoad/LazyImage\";\nimport CreateRatings from \"../UI/Ratings/CreateRatings\";\nimport classes from \"./CartList.module.css\";\nconst CartList: React.FC<CartListTypes> = ({\n  item,\n  isCart = false,\n  hasRatings = false,\n}) => {\n  const onDeleteHandler = () => {\n    let isDeleting = window.confirm(\n      \"Are you sure you want to remove this item from your cart?\"\n    );\n    if (!isDeleting) return;\n    let storedItems = JSON.parse(window.localStorage.getItem(\"cart\") || \"[]\");\n    let filteredItems = storedItems.filter(\n      (_item: any) => _item._id !== item._id\n    );\n    localStorage.setItem(\"cart\", JSON.stringify(filteredItems));\n  };\n\n  const adjustQuantity = (type: string) => {\n    let storedItems = JSON.parse(window.localStorage.getItem(\"cart\") || \"[]\");\n\n    let findDublicate: [] = storedItems.filter(\n      (_item: any) => _item._id === item._id\n    );\n\n    if (findDublicate.length > 0) {\n      storedItems.map((cur: any) => {\n        if (cur._id === item._id) {\n          if (cur.quantity >= 1) {\n            if (type == \"inc\") cur.quantity += 1;\n            if (type == \"dsc\") cur.quantity -= 1;\n          } else {\n            cur.quantity = 1;\n          }\n        }\n\n        return cur;\n      });\n\n      localStorage.setItem(\"cart\", JSON.stringify(storedItems));\n\n      return;\n    }\n  };\n\n  const [showReview, setShowReview] = useState<boolean>(false);\n  const onToggleReviewHandler = () => {\n    setShowReview(!showReview);\n  };\n\n  return (\n    <div className={classes.main}>\n      <div className={classes.img_wrapper}>\n        <Link to={\"/product/\" + item._id}>\n          <LazyImage src={ProductUrl() + item.image1} alt=\"\" />\n        </Link>\n      </div>\n\n      <div className={classes.details_wrapper}>\n        <p className={classes.big_txt}>\n          {item.name} ({item.brand})\n        </p>\n\n        {/* <p>Brand: RandomStyles</p> */}\n        {/* <p className={classes.product_code}>Product code: {}</p> */}\n\n        <div className={classes.price_wrapper}>\n          {/* <p>Price</p> */}\n\n          <div>\n            <b>\n              {item?.price?.toLocaleString(\"en\")} x {item.quantity} = $\n              {(item?.price * item.quantity).toLocaleString()}\n            </b>\n            {/* <del>${(item.price + item.price / 2).toLocaleString()}</del>{\" \"} */}\n          </div>\n        </div>\n\n        {isCart && (\n          <div className={classes.btn_wrapper}>\n            <div className={classes.qty_wrapper}>\n              <button\n                onClick={() => adjustQuantity(\"dsc\")}\n                disabled={item.quantity === 1 ? true : false}\n              >\n                <FaChevronLeft />\n              </button>\n              <input type=\"number\" disabled value={item.quantity} />\n              <button onClick={() => adjustQuantity(\"inc\")}>\n                <FaChevronRight />\n              </button>\n            </div>\n            <button className={classes.cart_btn} onClick={onDeleteHandler}>\n              {\" \"}\n              {/* <FaTrash /> */}\n              Remove\n            </button>\n          </div>\n        )}\n\n        {hasRatings && (\n            \n              <button\n                className={classes.cart_btn}\n                onClick={onToggleReviewHandler}\n              >\n                {\" \"}\n                Give a review\n              </button>\n          \n        )}\n\n{showReview && (\n        <CreateRatings\n          productId={item._id}\n          onCloseHandler={onToggleReviewHandler}\n        />\n\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CartList;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Cart_main__DJNp6\",\"title\":\"Cart_title__Y+URu\",\"cart_sub_title\":\"Cart_cart_sub_title__SrLd-\"};","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CartList from \"../Cart/CartList\";\nimport NotFound from \"../UI/NotFound/NotFound\";\nimport Wrapper from \"../UI/Wrapper/Wrapper\";\nimport { useGetRequestQuery } from \"../../store/services/users\";\nimport classes from \"../../Styles/Cart.module.css\";\nfunction Cart() {\n  const { data: user } = useGetRequestQuery(\"/user\");\n  const [isLoogedIn, setIsLoggedIn] = useState<boolean>(true);\n  useEffect(() => {\n    if (user) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n  }, [user]);\n\n  let [carts, setCart] = useState([]);\n\n  let [totalBalance, setTotalBalance] = useState(0);\n\n  useEffect(() => {\n    setInterval(() => {\n      let storedItems = JSON.parse(window.localStorage.getItem(\"cart\") || \"[]\");\n      setCart(storedItems);\n\n      if (storedItems.length > 0) {\n        let getTotal = storedItems.map((_item: any) => {\n          _item.total = _item.price * _item.quantity;\n          return _item;\n        });\n\n        let getNewTotal = getTotal.map((item: any) => item.total);\n\n        let calcTotal = getNewTotal.reduce((a: any, b: any) => a + b, 0);\n\n        setTotalBalance(calcTotal);\n      }\n    }, 100);\n  }, []);\n\n  return (\n    <Wrapper>\n      <main className={classes.main}>\n        <article>\n          <div>\n            <p className={classes.title}>My Cart</p>\n            <p className={classes.cart_sub_title}>\n              You have amzing items in yout cart, you can simple inclreade the\n              wauntity or you cart and the balance will be topped as well\n            </p>\n          </div>\n          <br />\n          <div className={classes.cart_wrapper}>\n            {carts.map((item: any) => {\n              return <CartList key={item.id} isCart={true} item={item} />;\n            })}\n          </div>\n\n\n\n{carts.length < 1 && <NotFound /> }\n        </article>\n\n        <aside>\n          <h1>Total: ${totalBalance.toLocaleString(\"en\")}</h1>\n\n          {isLoogedIn ? (\n            <Link to={\"/checkout\"}>\n              <button>Checkout now</button>\n            </Link>\n          ) : (\n            <>\n            <br />\n              <p>\n                You need to log in to proceed to checkout. Please log in to\n                continue.\n              </p>\n              <Link to={\"/login?redirect=checkout\"}>\n                <button>Login </button>\n              </Link>\n            </>\n          )}\n        </aside>\n      </main>\n    </Wrapper>\n  );\n}\n\nexport default Cart;\n"],"names":["productId","onCloseHandler","PostRequest","usePostRequestMutation","rating","setRating","useState","comment","setComments","className","classes","id","onClick","map","index","setRatings","color","size","onChange","e","target","value","placeholder","name","maxLength","alert","length","url","body","unwrap","then","data","console","log","Swal","icon","text","message","catch","error","title","item","isCart","hasRatings","adjustQuantity","type","storedItems","JSON","parse","window","localStorage","getItem","filter","_item","_id","cur","quantity","setItem","stringify","showReview","setShowReview","onToggleReviewHandler","to","LazyImage","src","ProductUrl","image1","alt","brand","price","toLocaleString","disabled","confirm","filteredItems","user","useGetRequestQuery","isLoogedIn","setIsLoggedIn","useEffect","carts","setCart","totalBalance","setTotalBalance","setInterval","calcTotal","total","reduce","a","b","Wrapper","CartList","NotFound"],"sourceRoot":""}