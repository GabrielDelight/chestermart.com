{"version":3,"file":"static/js/947.a43a0a82.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/UI/Wrapper/ProfileStyles.module.css?f3fa","components/UI/Wrapper/ProfileWrapper.tsx","webpack://my-app/./src/Styles/Profile.module.css?8f69","components/pages/Account/Profile.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"ProfileStyles_main__OBJ23\",\"sub_header\":\"ProfileStyles_sub_header__1s7hP\"};","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ProfileWrapperTypes } from \"../../../types/types\";\nimport Header from \"../Header/Header\";\nimport SideBar from \"../SideBar/SideBar\";\nimport classes from \"./ProfileStyles.module.css\";\nconst ProfileWrapper: React.FC<ProfileWrapperTypes> = ({ children }) => {\n  const navigate = useNavigate();\n\n  const isTokenExpired = (token: any) => {\n    if (!token || token === \"undefined\") {\n      navigate(\"/login\");\n\n      return;\n    }\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\n    return Math.floor(Date.now() / 1000) >= payload.exp;\n  };\n\n  // Example usage:\n  const token = localStorage.getItem(\"token\");\n  const expired = isTokenExpired(token);\n\n  useEffect(() => {\n    if (expired) {\n      alert(\"Session has expired\");\n    }\n    if (expired || !token || token.length < 1) {\n      navigate(\"/login\");\n    }\n  }, [expired]);\n\n  return (\n    <>\n      <Header />\n      <main className={classes.main}>\n        <aside>\n          <SideBar />\n        </aside>\n        <article>{children}</article>\n      </main>\n    </>\n  );\n};\n\nexport default ProfileWrapper;\n","// extracted by mini-css-extract-plugin\nexport default {\"form_title\":\"Profile_form_title__+13Ia\",\"form_row\":\"Profile_form_row__lKATq\",\"form\":\"Profile_form__ZAAq6\",\"form_list\":\"Profile_form_list__SSSjl\",\"error\":\"Profile_error__yL-KE\"};","import React, { useEffect, useState } from \"react\";\nimport ProfileWrapper from \"../../UI/Wrapper/ProfileWrapper\";\nimport classes from \"../../../Styles/Profile.module.css\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useGetRequestQuery, usePostRequestMutation } from \"../../../store/services/users\";\nimport Swal from \"sweetalert2\";\n\nconst FormSchema = Yup.object().shape({\n  firstname: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Please enter your first name\"),\n  lastname: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Please eneter your last name\"),\n  email: Yup.string()\n    .email(\"Invalid email address\")\n    .required(\"Your valid email is required\"),\n  dob: Yup.date()\n    .required(\"Date of Birth is required\")\n    .max(new Date(), \"Date of Birth cannot be in the future\")\n    .min(new Date(1900, 0, 1), \"Date of Birth cannot be before 1900\"),\n  phoneNumber: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(190, \"Too Long!\")\n    .required(\"Phone number is required\"),\n \n});\n\nconst PasswordFormSchema = Yup.object().shape({\n  oldPassword: Yup.string()\n    .min(8)\n    .matches(\n      /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/,\n      \"Password must contain at least 8 characters, one uppercase letter, one lowercase letter, one number, and one special character.\"\n    )\n    .required(\"Password is required\"),\n  password: Yup.string()\n    .min(8)\n    .matches(\n      /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/,\n      \"Password must contain at least 8 characters, one uppercase letter, one lowercase letter, one number, and one special character.\"\n    )\n    .required(\"Password is required\"),\n  confirmPassword: Yup.string()\n    .min(8, \"Confirm password must be 8 characters long\")\n    .oneOf([Yup.ref(\"password\")], \"Password did not match\")\n    .required(\"Confirm password is required\"),\n});\n\n\n\nfunction Profile() {\n  const [PostRequest] = usePostRequestMutation();\n\n  const { data: user = {}, refetch } = useGetRequestQuery(\"/user\");\n  let [updateKey, setUpdateKey] = useState(1);\n\n  //   THis codeelow b will help to update the fomr state when it load with the init values\n  useEffect(() => {\n    refetch();\n    if (user?._id) {\n      let intervalId = setTimeout(() => {\n        setUpdateKey(Math.random());\n      }, 100);\n\n      return () => clearTimeout(intervalId);\n    }\n  }, [user?._id]);\n\n  console.log(user.dob)\n\n  return (\n    <ProfileWrapper>\n      <Formik\n        key={updateKey}\n        initialValues={{\n          firstname: user.firstname,\n          lastname: user.lastname,\n          email: user.email,\n          dob: user.dob,\n          phoneNumber: user.phoneNumber,\n         \n        }}\n        onSubmit={(values) => {\n          PostRequest({\n            url: \"/account-update\",\n            body: {\n             ...values\n            },\n          })\n            .unwrap()\n            .then((data) => {\n\n              console.log(data);\n              Swal.fire({\n                icon: \"success\",\n                text: data.message,\n              });\n              \n            })\n            .catch((error) => {\n              console.log(error);\n              Swal.fire({\n                icon: \"error\",\n                title: \"Oops...\",\n                text: error.data.message,\n              });\n            });\n        }}\n        validationSchema={FormSchema}\n      >\n        {({\n          handleChange,\n          handleSubmit,\n          setFieldTouched,\n          touched,\n          isValid,\n          values,\n          errors,\n        }) => (\n          <>\n            <div className={classes.form}>\n              <h1>Profile Information</h1>\n              <br />\n              <div className={classes.form_row}>\n                <div>\n                  <label htmlFor=\"\">First Name</label>\n                  <input\n                    type=\"text\"\n                    placeholder=\"John\"\n                    value={values.firstname}\n                    onChange={handleChange(\"firstname\")}\n                  />\n                  {touched.firstname && errors.firstname && (\n                    <p className={classes.error}>\n                      {errors.firstname as unknown as any}\n                    </p>\n                  )}\n                </div>\n\n                <div>\n                  <label htmlFor=\"\">Last Name</label>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Smith\"\n                    value={values.lastname}\n                    onChange={handleChange(\"lastname\")}\n                  />\n                  {touched.lastname && errors.lastname && (\n                    <p className={classes.error}>\n                      {errors.lastname as unknown as any}\n                    </p>\n                  )}\n                </div>\n              </div>\n              <div className={classes.form_row}>\n                <div>\n                  <label htmlFor=\"\">D.O.B</label>\n                  <input\n                    type=\"date\"\n                    value={values.dob}\n                    onChange={handleChange(\"dob\")}\n                  />\n\n                  {touched.dob && errors.dob && (\n                    <p className={classes.error}>\n                      {errors.dob as unknown as any}\n                    </p>\n                  )}\n                </div>\n\n                <div>\n                  <label htmlFor=\"\">Phone number</label>\n                  <input\n                    type=\"number\"\n                    placeholder=\"+123 456 789\"\n                    value={values.phoneNumber}\n                    onChange={handleChange(\"phoneNumber\")}\n                  />\n                  {touched.phoneNumber && errors.phoneNumber && (\n                    <p className={classes.error}>\n                      {errors.phoneNumber as unknown as any}\n                    </p>\n                  )}\n                </div>\n              </div>\n\n              <div className={classes.form_list}>\n                <div>\n                  <label htmlFor=\"\">E-mail Address</label>\n                  <input\n                    type=\"email\"\n                    disabled\n                    placeholder=\"johnsmith@email.com\"\n                    value={values.email}\n                    onChange={handleChange(\"email\")}\n                  />\n                  {touched.email && errors.email && (\n                    <p className={classes.error}>\n                      {errors.email as unknown as any}\n                    </p>\n                  )}\n                </div>\n              </div>\n\n              <div className={classes.form_list}>\n                <button type=\"button\" onClick={() => handleSubmit()}>Save Changes</button>\n              </div>\n            </div>\n          </>\n        )}\n      </Formik>\n\n      <br />\n\n\n      <Formik\n        initialValues={{\n          password: \"\",\n          oldPassword: \"\",\n          confirmPassword: ''\n\n        }}\n        onSubmit={(values) => {\n\n            PostRequest({\n              url: \"/change-password\",\n              body: {\n                oldPassword: values.oldPassword,\n                password: values.password,\n                confirmPassword: values.confirmPassword,\n              },\n            })\n              .unwrap()\n              .then((data) => {\n\n                console.log(data);\n                Swal.fire({\n                  icon: \"success\",\n                  text: data.message,\n                });\n               \n              })\n              .catch((error) => {\n                console.log(error);\n                Swal.fire({\n                  icon: \"error\",\n                  title: \"Oops...\",\n                  text: error.data.message,\n                });\n              });\n        }}\n        validationSchema={PasswordFormSchema}\n      >\n        {({\n          handleChange,\n          handleSubmit,\n          setFieldTouched,\n          touched,\n          isValid,\n          values,\n          errors,\n        }) => (\n          <div className={classes.main}>\n            <div className={classes.wrapper}>\n              <div className={classes.form}>\n                <p className={classes.form_title}>Change Password</p>\n                <p style={{ fontSize: 12, marginTop: -10 }}>\n                  Please enter a stronger password\n                </p>\n                <br />\n                <div className={classes.form_list}>\n                  <label htmlFor=\"\">Old password</label>\n                  <input type=\"password\" placeholder=\"Enter your old password\"  name=\"password\"\n                    value={values.oldPassword}\n                    onChange={handleChange(\"oldPassword\")}\n                  />\n                  {touched.oldPassword && errors.oldPassword && (\n                    <p className={classes.error}>{errors.oldPassword}</p>\n                  )}\n                </div>\n                <div className={classes.form_list}>\n                  <label htmlFor=\"\">Password</label>\n                  <input type=\"password\" placeholder=\"Enter your password\"  name=\"password\"\n                    value={values.password}\n                    onChange={handleChange(\"password\")}\n                  />\n                  {touched.password && errors.password && (\n                    <p className={classes.error}>{errors.password}</p>\n                  )}\n                </div>\n                <div className={classes.form_list}>\n                  <label htmlFor=\"\">Confirm Password</label>\n                  <input type=\"password\" placeholder=\"Confirm  password\" name=\"confirmPassword\"\n                    value={values.confirmPassword}\n                    onChange={handleChange(\"confirmPassword\")}\n                  />\n                  {touched.confirmPassword && errors.confirmPassword && (\n                    <p className={classes.error}>{errors.confirmPassword}</p>\n                  )}\n                </div>\n\n                <div className={classes.form_list}>\n                  <button onClick={() => handleSubmit()}>Change password</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Formik>\n\n\n    </ProfileWrapper>\n  );\n}\n\nexport default Profile;\n"],"names":["children","navigate","useNavigate","token","localStorage","getItem","expired","payload","JSON","parse","atob","split","Math","floor","Date","now","exp","isTokenExpired","useEffect","alert","length","Header","className","classes","SideBar","FormSchema","Yup","shape","firstname","min","max","required","lastname","email","dob","phoneNumber","PasswordFormSchema","oldPassword","matches","password","confirmPassword","oneOf","PostRequest","usePostRequestMutation","data","user","refetch","useGetRequestQuery","updateKey","setUpdateKey","useState","_id","intervalId","setTimeout","random","clearTimeout","console","log","ProfileWrapper","initialValues","onSubmit","values","url","body","unwrap","then","Swal","icon","text","message","catch","error","title","validationSchema","handleChange","handleSubmit","setFieldTouched","touched","isValid","errors","htmlFor","type","placeholder","value","onChange","disabled","onClick","style","fontSize","marginTop","name"],"sourceRoot":""}