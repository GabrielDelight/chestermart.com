{"version":3,"file":"static/js/489.773b7847.chunk.js","mappings":"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","sources":["components/pages/Forms/ForgotPassword.tsx","webpack://my-app/./src/Styles/Login.module.css?fbf6"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Wrapper from \"../../UI/Wrapper/Wrapper\";\nimport classes from \"../../../Styles/Login.module.css\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { usePostRequestMutation } from \"../../../store/services/users\";\nimport Swal from \"sweetalert2\";\n\nconst FormSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"Invalid email address\")\n    .required(\"Your valid email is required\"),\n});\nconst FormSchema2 = Yup.object().shape({\n  code: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(6, \"Too Long!\")\n    .required(\"Please enter code\"),\n});\n\nfunction ForgotPassword() {\n  const [showCodeInput, setShowShow] = useState<boolean>(false);\n  const [enteredEmail, setEnteredEmail] =  useState<string>(\"\")\n\n  const [PostRequest] = usePostRequestMutation();\n\n  const navigate = useNavigate();\n  const toggleSHowHide = () => {\n    setShowShow(!showCodeInput);\n  };\n\n  const onVerifyHandler = () => {\n    \n  };\n\n  return (\n    <>\n      <div className={classes.main}>\n        <div className={classes.wrapper}>\n          <p className={classes.form_title}>Forgot password?</p>\n\n          {!showCodeInput ? (\n            <Formik\n              initialValues={{\n                email: \"\",\n              }}\n              onSubmit={(values) => {\n                toggleSHowHide();\n                setEnteredEmail(values.email)\n\n                PostRequest({\n                  url: \"/generate-confirmation-code\",\n                  body: {\n                    email: values.email,\n                    emailType: \"forgot-password\",\n                  },\n                })\n                  .unwrap()\n                  .then((data) => {\n                    console.log(data);\n                    // toggleSHowHide();\n                  })\n                  .catch((error) => {\n                    console.log(error);\n                    Swal.fire({\n                      icon: \"error\",\n                      title: \"Oops...\",\n                      text: error.data.message,\n                    });\n                  });\n              }}\n              validationSchema={FormSchema}\n            >\n              {({\n                handleChange,\n                handleSubmit,\n                setFieldTouched,\n                touched,\n                isValid,\n                values,\n                errors,\n              }) => (\n                <div className={classes.form}>\n                  <p style={{ fontSize: 12, marginTop: -10 }}>\n                    No worries! Your data is backed up, and you will recover\n                    your password by simply following the process.\n                  </p>\n\n                  <br />\n                  <div className={classes.form_list}>\n                    <label htmlFor=\"\">E-mail Address</label>\n                    <input\n                      type=\"email\"\n                      placeholder=\"johnsmith@email.com\"\n                      name=\"email\"\n                      value={values.email}\n                      onChange={handleChange(\"email\")}\n                    />\n                    {touched.email && errors.email && (\n                      <p className={classes.error}>{errors.email}</p>\n                    )}\n                  </div>\n\n                  <div className={classes.form_list}>\n                    <button onClick={() => handleSubmit()}>Submit</button>\n                  </div>\n                </div>\n              )}\n            </Formik>\n          ) : (\n            <Formik\n              initialValues={{\n                code: \"\",\n              }}\n              onSubmit={(values) => {\n\n\n\n                // reset-password-compare-verification-code\n                PostRequest({\n                  url: \"/reset-password-compare-verification-code\",\n                  body: {\n                    code: values.code,\n                    email: enteredEmail,\n                  },\n                })\n                  .unwrap()\n                  .then((data) => {\n                    console.log(data);\n                // onVerifyHandler();\n\n                navigate(`/reset-password?code=${values.code}&&email=${enteredEmail}`);\n\n                    // toggleSHowHide();\n                  })\n                  .catch((error) => {\n                    console.log(error);\n                    Swal.fire({\n                      icon: \"error\",\n                      title: \"Oops...\",\n                      text: error.data.message,\n                    });\n                  });\n              }}\n              validationSchema={FormSchema2}\n            >\n              {({\n                handleChange,\n                handleSubmit,\n                setFieldTouched,\n                touched,\n                isValid,\n                values,\n                errors,\n              }) => (\n                <div className={classes.form}>\n                  <p style={{ fontSize: 12, marginTop: -10 }}>\n                    A code has been sent to your email; please enter it below.\n                  </p>\n\n                  <br />\n                  <div className={classes.form_list}>\n                    <label htmlFor=\"\">Enter verification code</label>\n                    <input\n                      type=\"number\"\n                      placeholder=\"Enter your password\"\n                      name=\"code\"\n                      value={values.code}\n                      onChange={handleChange(\"code\")}\n                    />\n                    {touched.code && errors.code && (\n                      <p className={classes.error}>{errors.code}</p>\n                    )}\n                  </div>\n                  <div className={classes.form_list}>\n                    <button type=\"submit\" onClick={() => handleSubmit()}>verify</button>\n                  </div>\n                </div>\n              )}\n            </Formik>\n          )}\n\n          <p\n            style={{ fontSize: 12, cursor: \"pointer\" }}\n            onClick={() => setShowShow(false)}\n          >\n            Didn't get the code?\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ForgotPassword;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Login_main__-Woik\",\"wrapper\":\"Login_wrapper__olPZx\",\"form_title\":\"Login_form_title__SPX-U\",\"form_row\":\"Login_form_row__QlWgU\",\"form\":\"Login_form__aduzR\",\"form_list\":\"Login_form_list__uNq9C\",\"error\":\"Login_error__VGhM-\"};"],"names":["FormSchema","Yup","shape","email","required","FormSchema2","code","min","max","showCodeInput","setShowShow","useState","enteredEmail","setEnteredEmail","PostRequest","usePostRequestMutation","navigate","useNavigate","className","classes","initialValues","onSubmit","values","url","body","unwrap","then","data","console","log","catch","error","Swal","icon","title","text","message","validationSchema","handleChange","handleSubmit","setFieldTouched","touched","isValid","errors","style","fontSize","marginTop","htmlFor","type","placeholder","name","value","onChange","onClick","emailType","cursor"],"sourceRoot":""}