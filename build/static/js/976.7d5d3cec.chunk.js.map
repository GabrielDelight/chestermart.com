{"version":3,"file":"static/js/976.7d5d3cec.chunk.js","mappings":"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","sources":["webpack://my-app/./src/Styles/Product.module.css?4133","webpack://my-app/./src/components/UI/MatchingProduct/MatchingProduct.module.css?697c","components/UI/MatchingProduct/MatchingProduct.tsx","components/pages/Product.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Product_main__2EFOO\",\"left_side\":\"Product_left_side__1NNrj\",\"right_side\":\"Product_right_side__K1PeV\",\"qty_wrapper\":\"Product_qty_wrapper__qYt9o\",\"cart_btn\":\"Product_cart_btn__xBwab\",\"btn_wrapper\":\"Product_btn_wrapper__RedAH\",\"description\":\"Product_description__-8vAI\",\"para\":\"Product_para__GFsZH\",\"property_list\":\"Product_property_list__jflhh\",\"product_wrapper\":\"Product_product_wrapper__Jan7B\",\"dispcth_xx\":\"Product_dispcth_xx__u4So9\",\"dispatch_time\":\"Product_dispatch_time__-2vzn\",\"img_lists\":\"Product_img_lists__jElg4\",\"rating_wrap\":\"Product_rating_wrap__GggHy\"};","// extracted by mini-css-extract-plugin\nexport default {\"product_wrapper\":\"MatchingProduct_product_wrapper__wEMA1\"};","import React, { useEffect, useState } from 'react'\nimport { useInView } from 'react-intersection-observer';\nimport { useGetRequestQuery } from '../../../store/services/users';\nimport { MatchingProductTypes } from '../../../types/types';\nimport ProductList from '../../ProductList/ProductList';\nimport NotFound from '../NotFound/NotFound';\nimport Spinner from '../Spinner/Spinner';\nimport classes from \"./MatchingProduct.module.css\"\n\nconst MatchingProduct: React.FC<MatchingProductTypes>  = ({brand, category}) => {\n   const { ref, inView } = useInView({\n      threshold: 0.1,\n    });\n  \n    const [limit, setLimit] = useState<number>(10);\n  \n    const {\n      data = [],\n      isLoading,\n      refetch,\n    } = useGetRequestQuery(\n      `/filter-products?limit=${limit}&&category=${category}&&brand=${brand}&&maxPrice=${90000000}&&minPrice=${0}`\n    );\n  \n    useEffect(() => {\n      if (inView) {\n        setLimit(limit + 10);\n        setTimeout(() => {\n          refetch();\n        }, 100);\n      }\n    }, [inView]);\n\n    \n\n  return (\n    <div>\n       <div className={classes.product_wrapper}>\n          {data.map((item: any) => {\n            return (\n              <ProductList\n                image={item.image1}\n                name={item.name}\n                price={item.price}\n                key={item.id}\n                _id={item._id}\n                item={item}\n              />\n            );\n          })}\n        </div>\n\n        {isLoading && <Spinner />}\n\n        {data.length < 1 && isLoading === false ? <NotFound /> : null}\n\n        <div id=\"posts\" ref={ref} style={{ height: \"20px\" }} />\n    </div>\n  )\n}\n\nexport default MatchingProduct","import React, { useEffect, useState } from \"react\";\nimport {\n  FaChevronLeft,\n  FaChevronRight,\n  FaExclamationCircle,\n} from \"react-icons/fa\";\nimport { Link, useParams } from \"react-router-dom\";\nimport LazyImage from \"../LazzyLoad/LazyImage\";\nimport Wrapper from \"../UI/Wrapper/Wrapper\";\nimport { ProductUrl } from \"../../ImageUrl/ImageUrl\";\nimport { useGetRequestQuery } from \"../../store/services/users\";\nimport classes from \"../../Styles/Product.module.css\";\nimport MatchingProduct from \"../UI/MatchingProduct/MatchingProduct\";\nimport { BsStar, BsStarFill } from \"react-icons/bs\";\nfunction Product() {\n  const { id: _id } = useParams();\n\n  const { data = {} } = useGetRequestQuery(\"/product/\" + _id);\n  const { data: summary, isLoading } = useGetRequestQuery(\n    `/ratings-summary/${_id}`\n  );\n\n  const [specArr, setSpecArr] = useState<any[]>([]);\n  const [mainImage, setMaimImage] = useState<string>(\n    ProductUrl() + data?.image1\n  );\n\n  const setSelectedImage = (_img: string) => {\n    setMaimImage(ProductUrl() + _img);\n  };\n\n  useEffect(() => {\n    setMaimImage(ProductUrl() + data?.image1);\n  }, [data?.image1]);\n\n  useEffect(() => {\n    // Parse specifications safely, defaulting to an empty array if not valid JSON\n    let rawSpec: any[] = [];\n\n    try {\n      rawSpec = JSON.parse(data?.specifications || \"[]\");\n    } catch (e) {\n      console.error(\"Error parsing specifications:\", e);\n    }\n\n    if (Array.isArray(rawSpec)) {\n      setSpecArr(rawSpec);\n    }\n  }, [data?.specifications]);\n\n  let [counter, setCounter] = useState<{\n    count: number;\n  }>({\n    count: 1,\n  });\n\n  useEffect(() => {\n    let storedItems = JSON.parse(window.localStorage.getItem(\"cart\") || \"[]\");\n\n    let [findDublicate] = storedItems.filter((item: any) => item._id === _id);\n\n    if (findDublicate) {\n      setCounter(() => {\n        return {\n          count: findDublicate.quantity,\n        };\n      });\n    }\n  }, []);\n\n  const adjustQuantity = (type: string) => {\n    setCounter((prevState) => {\n      return {\n        count: type === \"inc\" ? (prevState.count += 1) : (prevState.count -= 1),\n      };\n    });\n  };\n\n  const onAddToCart = () => {\n    let storedItems = JSON.parse(window.localStorage.getItem(\"cart\") || \"[]\");\n\n    let findDublicate: [] = storedItems.filter((item: any) => item._id === _id);\n\n    if (findDublicate.length > 0) {\n      storedItems.map((cur: any) => {\n        if (cur._id === _id) {\n          cur.quantity = counter.count;\n        }\n\n        return cur;\n      });\n\n      localStorage.setItem(\"cart\", JSON.stringify(storedItems));\n      return;\n    }\n\n    let newArr = [\n      ...storedItems,\n      {\n        ...data,\n        quantity: 1,\n      },\n    ];\n\n    localStorage.setItem(\"cart\", JSON.stringify(newArr));\n  };\n\n  return (\n    <Wrapper>\n      <main className={classes.main}>\n        <div className={classes.left_side}>\n          <LazyImage src={mainImage} alt=\"\" height={400} />\n\n          <div className={classes.img_lists}>\n            <LazyImage\n              onClick={() => setSelectedImage(data?.image1)}\n              src={ProductUrl() + data?.image1}\n              alt=\"\"\n            />\n\n            {data?.image2?.length > 0 && (\n              <div>\n                <LazyImage\n                  onClick={() => setSelectedImage(data?.image2)}\n                  src={ProductUrl() + data?.image2}\n                  alt=\"\"\n                />\n              </div>\n            )}\n            {data?.image3?.length > 0 && (\n              <div>\n                <LazyImage\n                  onClick={() => setSelectedImage(data?.image3)}\n                  src={ProductUrl() + data?.image3}\n                  alt=\"\"\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className={classes.right_side}>\n          <h1 className={classes.h1}>{data?.name}</h1>\n          <h4>Brand: {data?.brand}</h4>\n          <h4>\n            Price: {\" \"}\n            <b>${data?.price!}</b>{\" \"}\n            <del> ${data?.price! + data?.price! / 2}</del>\n          </h4>\n\n          <div className={classes.rating_wrap}>\n            {[0, 1, 2, 3, 4].map((index) => {\n              return (\n                <div key={index}>\n                  {summary?.ratings! <= index ? (\n                    <BsStar color=\"chocolate\" size={20} />\n                  ) : (\n                    <BsStarFill color=\"chocolate\" size={20} />\n                  )}\n                </div>\n              );\n            })}\n\n            <Link to={\"/ratings/\" + data?._id}>\n              <p>({summary?.itemlength!} verified ratings)</p>\n            </Link>\n          </div>\n\n          <div className={classes.btn_wrapper}>\n            <div className={classes.qty_wrapper}>\n              <button\n                onClick={() => adjustQuantity(\"dsc\")}\n                disabled={counter.count === 1 ? true : false}\n              >\n                <FaChevronLeft />\n              </button>\n              <input type=\"number\" disabled value={counter.count} />\n              <button onClick={() => adjustQuantity(\"inc\")}>\n                <FaChevronRight />\n              </button>\n            </div>\n            <button className={classes.cart_btn} onClick={onAddToCart}>\n              Add to Cart\n            </button>\n          </div>\n\n          <div className={classes.dispcth_xx}>\n            <div className={classes.dispatch_time}>\n              <small>Dispatched in 5 - 7 weeks</small>\n\n              <FaExclamationCircle />\n            </div>\n\n            <div className={classes.dispatch_time}>\n              <small>Home Delivery - $10</small>\n            </div>\n          </div>\n\n          <div className={classes.description}>\n            <h4>DESCRIPTION</h4>\n\n            <p className={classes.para}>{data?.description}</p>\n\n            <div>\n              {specArr.map((item, index) => {\n                return (\n                  <div key={index} className={classes.property_list}>\n                    <h4>{item.property}:</h4>\n                    <p>{item.value}</p>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </main>\n      <section className=\"section\">\n        <h1>Matching With</h1>\n        <MatchingProduct brand={data?.brand} category={data?.category} />\n      </section>\n    </Wrapper>\n  );\n}\n\nexport default Product;\n"],"names":["brand","category","ref","inView","useInView","threshold","limit","setLimit","useState","data","isLoading","refetch","useGetRequestQuery","useEffect","setTimeout","className","classes","map","item","ProductList","image","image1","name","price","_id","id","Spinner","length","NotFound","style","height","useParams","summary","specArr","setSpecArr","mainImage","setMaimImage","ProductUrl","setSelectedImage","_img","rawSpec","JSON","parse","specifications","e","console","error","Array","isArray","counter","setCounter","count","storedItems","window","localStorage","getItem","findDublicate","filter","quantity","adjustQuantity","type","prevState","Wrapper","LazyImage","src","alt","onClick","image2","image3","index","ratings","color","size","to","itemlength","disabled","value","cur","setItem","stringify","newArr","description","property"],"sourceRoot":""}