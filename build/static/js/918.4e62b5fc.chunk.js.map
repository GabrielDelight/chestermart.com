{"version":3,"file":"static/js/918.4e62b5fc.chunk.js","mappings":"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","sources":["components/pages/Admin/Auth/AdminSignUp.tsx","webpack://my-app/./src/Styles/Login.module.css?fbf6"],"sourcesContent":["import React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport classes from \"../../../../Styles/Login.module.css\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Swal from \"sweetalert2\";\nimport { usePostRequestMutation } from \"../../../../store/services/users\";\n\nconst FormSchema = Yup.object().shape({\n  firstname: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Please enter your first name\"),\n  lastname: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Please eneter your last name\"),\n  email: Yup.string()\n    .email(\"Invalid email address\")\n    .required(\"Your valid email is required\"),\n  phoneNumber: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(190, \"Too Long!\")\n    .required(\"Phone number is required\"),\n    secretKey: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(190, \"Too Long!\")\n    .required(\"Secret key is required\"),\n  password: Yup.string()\n    .min(8)\n    .matches(\n      /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/,\n      \"Password must contain at least 8 characters, one uppercase letter, one lowercase letter, one number, and one special character.\"\n    )\n    .required(\"Password is required\"),\n  confirmPassword: Yup.string()\n    .min(8, \"Confirm password must be 8 characters long\")\n    .oneOf([Yup.ref(\"password\")], \"Password did not match\")\n    .required(\"Confirm password is required\"),\n});\n\nfunction AdminSignUp() {\n  const [PostRequest] = usePostRequestMutation();\n\n  const navigate = useNavigate();\n\n  return (\n    <Formik\n      initialValues={{\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        phoneNumber: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        secretKey: \"\"\n      }}\n      onSubmit={(values) => {\n        console.log(\"XXXXXX:::::\", values);\n\n        PostRequest({\n          url: \"/admin/signup\",\n          body: values,\n        })\n          .unwrap()\n          .then((data) => {\n            console.log(data);\n            Swal.fire({\n               title: \"Account Created Successfully\",\n             });\n            navigate(\"/admin/login\");\n          })\n          .catch((error) => {\n            Swal.fire({\n              icon: \"error\",\n              title: \"Oops...\",\n              text: error.data.message,\n            });\n\n            console.log(error);\n          });\n      }}\n      validationSchema={FormSchema}\n    >\n      {({\n        handleChange,\n        handleSubmit,\n        setFieldTouched,\n        touched,\n        isValid,\n        values,\n        errors,\n      }) => (\n        <div className={classes.main}>\n          <div className={classes.wrapper}>\n            <div className={classes.form}>\n              <p className={classes.form_title}>Admin Sign Up</p>\n\n              <div className={classes.form_row}>\n                <div>\n                  <label htmlFor=\"\">First Name</label>\n                  <input\n                    type=\"text\"\n                    placeholder=\"John\"\n                    name=\"firstname\"\n                    value={values.firstname}\n                    onChange={handleChange(\"firstname\")}\n                  />\n                  {touched.firstname && errors.firstname && (\n                    <p className={classes.error}>{errors.firstname}</p>\n                  )}\n                </div>\n\n                <div>\n                  <label htmlFor=\"\">Last Name</label>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Smith\"\n                    name=\"lastname\"\n                    value={values.lastname}\n                    onChange={handleChange(\"lastname\")}\n                  />\n                  {touched.lastname && errors.lastname && (\n                    <p className={classes.error}>{errors.lastname}</p>\n                  )}\n                </div>\n              </div>\n              <div className={classes.form_row}>\n                <div>\n                  <label htmlFor=\"\">E-mail Address</label>\n                  <input\n                    type=\"text\"\n                    placeholder=\"johnsmith@email.com\"\n                    name=\"email\"\n                    value={values.email}\n                    onChange={handleChange(\"email\")}\n                  />\n                  {touched.email && errors.email && (\n                    <p className={classes.error}>{errors.email}</p>\n                  )}\n                </div>\n\n                <div>\n                  <label htmlFor=\"\">Phone number</label>\n                  <input\n                    type=\"number\"\n                    placeholder=\"+123 456 789\"\n                    name=\"phoneNumber\"\n                    value={values.phoneNumber}\n                    onChange={handleChange(\"phoneNumber\")}\n                  />\n                  {touched.phoneNumber && errors.phoneNumber && (\n                    <p className={classes.error}>{errors.phoneNumber}</p>\n                  )}\n                </div>\n              </div>\n              <div className={classes.form_list}>\n                <label htmlFor=\"\">Password</label>\n                <input\n                  type=\"password\"\n                  placeholder=\"Enter your password\"\n                  name=\"password\"\n                  value={values.password}\n                  onChange={handleChange(\"password\")}\n                />\n                {touched.password && errors.password && (\n                  <p className={classes.error}>{errors.password}</p>\n                )}\n              </div>\n              <div className={classes.form_list}>\n                <label htmlFor=\"\">Confirm password</label>\n                <input\n                  type=\"password\"\n                  placeholder=\"Confirm your password\"\n                  name=\"confirmPassword\"\n                  value={values.confirmPassword}\n                  onChange={handleChange(\"confirmPassword\")}\n                />\n                {touched.confirmPassword && errors.confirmPassword && (\n                  <p className={classes.error}>{errors.confirmPassword}</p>\n                )}\n              </div>\n              <div className={classes.form_list}>\n                <label htmlFor=\"\">Secret Key</label>\n                <input\n                  type=\"password\"\n                  placeholder=\"Confirm secret key\"\n                  name=\"confirmPassword\"\n                  value={values.secretKey}\n                  onChange={handleChange(\"secretKey\")}\n                />\n                {touched.secretKey && errors.secretKey && (\n                  <p className={classes.error}>{errors.secretKey}</p>\n                )}\n              </div>\n\n              <div className={classes.form_list}>\n                <button onClick={() => handleSubmit()}>Submit</button>\n              </div>\n\n              <p>\n                Already have an account? <Link to={\"/admin/login\"}>Login</Link>.\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n    </Formik>\n  );\n}\n\nexport default AdminSignUp;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Login_main__-Woik\",\"wrapper\":\"Login_wrapper__olPZx\",\"form_title\":\"Login_form_title__SPX-U\",\"form_row\":\"Login_form_row__QlWgU\",\"form\":\"Login_form__aduzR\",\"form_list\":\"Login_form_list__uNq9C\",\"error\":\"Login_error__VGhM-\"};"],"names":["FormSchema","Yup","shape","firstname","min","max","required","lastname","email","phoneNumber","secretKey","password","matches","confirmPassword","oneOf","PostRequest","usePostRequestMutation","navigate","useNavigate","initialValues","onSubmit","values","console","log","url","body","unwrap","then","data","Swal","title","catch","error","icon","text","message","validationSchema","handleChange","handleSubmit","setFieldTouched","touched","isValid","errors","className","classes","htmlFor","type","placeholder","name","value","onChange","onClick","to"],"sourceRoot":""}